<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>10</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>50</x>
      <y>180</y>
      <w>380</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>IntNode
--
-nodeData : int
-nodePointer : intNode
--
+getNodeData(): int
+getNodePointer(): IntNode*
+setNodeData(intValue): void
+setNodePointer(IntNOde * next): void

+IntNode(): constructor
+IntNOde(int value): init
+IntNode(int value, IntNode * nextNode): constructor

bg=blue
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>40</x>
      <y>550</y>
      <w>380</w>
      <h>190</h>
    </coordinates>
    <panel_attributes>IntNodeArray
--
-size:int
-front:IntNode*
--
+IntNodeArray(int size):constructor
+setAtIndex(int index, int value) : void
+getFromIndex(int index) : int
+getSize() : int

bg=red
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLNote</id>
    <coordinates>
      <x>20</x>
      <y>70</y>
      <w>200</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>Created by PeytonTrevino
bg=blue</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>470</x>
      <y>150</y>
      <w>380</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>Node&lt;Type&gt;
--
-nodeData : Type
nodePointer : Node&lt;Type&gt;*
--
Constructors
+Node() : constructor
+Node(Type value): constructor
+Node(Type data, Node&lt;Type&gt;*pointer): constructor

Methods
+getNodeData() : Type
+getNodePointer() : Node&lt;Type&gt;
+setNodeData(Type data) : void
+ setNodePointer(node&lt;Type&gt; * next): void

bg=magenta
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>490</x>
      <y>520</y>
      <w>480</w>
      <h>320</h>
    </coordinates>
    <panel_attributes>Array&lt;Type&gt;
--

-front : Node&lt;Type&gt;*
-size : int

--
Constructor's
+Array(): constructor
+Array(int Size): constructor

Advanced
+ ~Array&lt;Type&gt;():destructor
+Array&lt;Type&gt;(const Array&lt;Type&gt;&amp;toBeCopied): copy constructor

Methods
+getSize():int
+getFront()const:Node&lt;Type&gt;*
+setAtIndex(int index, Type value): void
+getFromIndex(int index): Type


bg=cyan
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>680</x>
      <y>410</y>
      <w>50</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>210</x>
      <y>440</y>
      <w>50</w>
      <h>130</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n</panel_attributes>
    <additional_attributes>10.0;110.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>20</x>
      <y>110</y>
      <w>430</w>
      <h>670</h>
    </coordinates>
    <panel_attributes>Typed Sample
group=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>460</x>
      <y>110</y>
      <w>530</w>
      <h>760</h>
    </coordinates>
    <panel_attributes>Name
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>1000</x>
      <y>130</y>
      <w>430</w>
      <h>300</h>
    </coordinates>
    <panel_attributes>Model :: List&lt;Type&gt;
--
-size : int
- front : Node&lt;Type&gt;*
--
+List&lt;Type&gt;() : constructor
+List&lt;Type&gt;(Const List&lt;Type&gt;&amp;source): copy constructor
+ ~List&lt;Type&gt;(): destructor

+addAtIndex(int index, Type value): void
+addFront(Type value): void
+addEnd(Type value): void
+remove(int index): void
+setAtIndex(int index, Type data): Type
+getFromIndex(int index): Type
+contains(Type data): bool
+getSize()const : int
+getFront() const : Node&lt;Type&gt;*
+getEnd()const:Node&lt;Type&gt;*
bg=pink</panel_attributes>
    <additional_attributes/>
  </element>
</diagram>
